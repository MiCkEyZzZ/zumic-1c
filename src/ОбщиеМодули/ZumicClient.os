&НаКлиенте
Перем СоединениеЗумик; // приватная переменная модуля

&НаКлиенте
Функция Подключиться(Хост, Порт, ТаймаутСек = 5) Экспорт
    // Простая обёртка - зависит от вашей платформы (наличие ИнтернетСоединение)
    Попытка
        СоединениеЗумик = Новый ИнтернетСоединение(Хост, Порт); // если в вашей платформе есть
        // если есть возможность установить таймаут:
        Если ТипЗнч(СоединениеЗумик.УстановитьТаймаут) <> Тип("Неопределено") Тогда
            Попытка
                СоединениеЗумик.УстановитьТаймаут(ТаймаутСек);
            Исключение
            КонецПопытки;
        КонецЕсли;
        Возврат Истина;
    Исключение
        Сообщить("Не удалось подключиться к " + Хост + ":" + Стр(Порт));
        СоединениеЗумик = Неопределено;
        Возврат Ложь;
    КонецПопытки;
КонецФункции

&НаКлиенте
Функция ОтправитьКоманду(Команда, Параметры = Неопределено) Экспорт
    Если СоединениеЗумик = Неопределено Тогда
        ВызватьИсключение "Нет подключения";
    КонецЕсли;

    // Формируем фрейм через ЗумикПротокол
    Фрейм = ЗумикПротокол.ЭнкодеКоманда(Команда, Параметры);

    // Отправка: используем метод ОтправитьСтроку(строка, кодировка) если доступен
    Попытка
        Если ТипЗнч(СоединениеЗумик.ОтправитьСтроку) <> Тип("Неопределено") Тогда
            СоединениеЗумик.ОтправитьСтроку(Фрейм);
        ИначеЕсли ТипЗнч(СоединениеЗумик.Записать) <> Тип("Неопределено") Тогда
            СоединениеЗумик.Записать(Фрейм);
        Иначе
            // Попробуем общий метод ОтправитьДанные/Send
            СоединениеЗумик.Отправить(Фрейм);
        КонецЕсли;
    Исключение
        ВызватьИсключение "Ошибка при отправке: " + ОписаниеОшибки();
    КонецПопытки;

    // Ожидаем ответ (синхронно)
    Ответ = ПолучитьОтвет();
    Возврат Ответ;
КонецФункции

&НаКлиенте
Функция ПолучитьОтвет() Экспорт
    Если СоединениеЗумик = Неопределено Тогда
        ВызватьИсключение "Нет подключения";
    КонецЕсли;

    // Читаем строку (предполагаем, что сервер возвращает inline строку +ВКПС)
    Попытка
        Если ТипЗнч(СоединениеЗумик.ПрочитатьСтроку) <> Тип("Неопределено") Тогда
            Буфер = СоединениеЗумик.ПрочитатьСтроку();
        ИначеЕсли ТипЗнч(СоединениеЗумик.Читать) <> Тип("Неопределено") Тогда
            Буфер = СоединениеЗумик.Читать(); // метод может вернуть строку
        Иначе
            // Если нет стандартного метода, пробуем читать по 1 байту в цикле (тормозно)
            Буфер = "";
            Пока Истина Цикл
                СтрЧ = СоединениеЗумик.ПрочитатьСтроку();
                Если СтрЧ = Неопределено Тогда
                    Прервать;
                КонецЕсли;
                Буфер = Буфер + СтрЧ;
                Если Найти(Буфер, Символы.ПС) > 0 Тогда
                    Прервать;
                КонецЕсли;
            КонецЦикла;
        КонецЕсли;

        // Парсим минимально через ЗумикПротокол
        Р = ЗумикПротокол.ДэкодеОтвет(Буфер);
        Если Р = Неопределено Тогда
            // пока возвращаем сырую строку
            Возврат Буфер;
        Иначе
            Возврат Р.Value;
        КонецЕсли;
    Исключение
        ВызватьИсключение "Ошибка при получении ответа: " + ОписаниеОшибки();
    КонецПопытки;
КонецФункции

&НаКлиенте
Процедура Закрыть() Экспорт
    Если СоединениеZumic <> Неопределено Тогда
        Попытка
            Если ТипЗнч(СоединениеZumic.Закрыть) <> Тип("Неопределено") Тогда
                СоединениеZumic.Закрыть();
            ИначеЕсли ТипЗнч(СоединениеZumic.ЗакрытьСоединение) <> Тип("Неопределено") Тогда
                СоединениеZumic.ЗакрытьСоединение();
            КонецЕсли;
        Исключение
        КонецПопытки;
        СоединениеZumic = Неопределено;
    КонецЕсли;
КонецПроцедуры
